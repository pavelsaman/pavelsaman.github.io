<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-10-13T13:23:16+02:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">pavelsaman</title><subtitle>Personal blog about technology, mostly Linux and testing.</subtitle><entry><title type="html">Database Library for MS SQL in Robot Framework and Python</title><link href="http://localhost:4000/database-library-for-mssql-in-robot-framework-and-python.html" rel="alternate" type="text/html" title="Database Library for MS SQL in Robot Framework and Python" /><published>2019-10-13T09:07:19+02:00</published><updated>2019-10-13T09:07:19+02:00</updated><id>http://localhost:4000/database-library-for-mssql-in-robot-framework-and-python</id><content type="html" xml:base="http://localhost:4000/database-library-for-mssql-in-robot-framework-and-python.html">&lt;p&gt;Robot Framework is a useful tool for test automation. It’s mostly used, and suitable, for UI testing because it can be easily integrated with Selenium API. But there could also be many other libraries, either written by other people or we can come up with our own libraries that extend the number of use cases for which Robot could be used. I’ve recently needed to use Robot in a way when it looks into a DB and checks a few things there. I’m going to share with you a part of my outcome.&lt;/p&gt;

&lt;h3 id=&quot;structure&quot;&gt;Structure&lt;/h3&gt;

&lt;p&gt;First of all, having a certain structure for the whole test project is important. As the number of test cases grows, it becomes more and more difficult to know where you keep things (test cases, variables, page objects, …). You can easily get lost in your project, only having to spend a lot of time every time you need to change a few test cases (or add new ones).&lt;/p&gt;

&lt;p&gt;Having said that, I keep the following structure for my test project:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.
├── Keywords
├── Libraries
├── Objects
├── README.md
├── Resources
├── Results
├── Settings
└── Tests
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is how an empty project in Robot looks when I use the tool. Of course I can further divide some of the folders, so a more real project would end up with a structure similar to this one:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.
├── arguments.txt
├── Keywords
│   ├── alpine_admin_keywords.txt
│   └── alpine_keywords.txt
├── Libraries
│   ├── AlpineDB.py
├── Objects
│   ├── alpine_admin_objects.py
│   ├── alpine_objects.py
├── README.md
├── red.xml
├── Resources
│   ├── alpine_admin_test_data.py
│   ├── alpine_sql.py
│   ├── alpine_test_data.py
│   ├── alpine_texts.py
│   ├── alpine_variables.py
├── Results
│   └── Screenshots
├── Settings
│   ├── alpine_admin_keywords.txt
│   ├── alpine_admin_tests.txt
│   ├── alpine_keywords.txt
│   └── alpine_tests.txt
└── Tests
    ├── Admin
    │   └── login_page.robot
    └── Eshop
        └── login_registration.robot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It’s still pretty similar to the empty project structure, you can just see more subdirectories in &lt;code class=&quot;highlighter-rouge&quot;&gt;Tests/&lt;/code&gt; where I try to keep things more structured, so I know where some particular tests are by just looking at it.&lt;/p&gt;

&lt;p&gt;Anyway, this is the basis I’m gonna use in this article.&lt;/p&gt;

&lt;h3 id=&quot;db-library&quot;&gt;DB Library&lt;/h3&gt;

&lt;p&gt;As I said at the beginning, I want to write a library that connects to a MS SQL database and e.g. gets a number of rows for a particular sql statement. First, I didn’t know much about this, but after some time spent googling, I found &lt;code class=&quot;highlighter-rouge&quot;&gt;pyodbc&lt;/code&gt; module that does exactly what I need. So the first step would be to install it &lt;code class=&quot;highlighter-rouge&quot;&gt;pip install pyodbc&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Robot framework allows you to write custom libraries in Python (more natural since Robot is basically a wrapper around Python) and Java. You can read all the details in the &lt;a href=&quot;https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#creating-test-libraries&quot;&gt;official documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ok, I can’t use Java as efficiently as Python, so I go for Python here. However, another decision I need to make fairly early now is what scope I want to use with my library. Robot allows for either global, suite, or test case scope. Again, I’m not going to rewrite the official documentation here, just &lt;a href=&quot;https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#test-library-scope&quot;&gt;read it there&lt;/a&gt;, if you want a more detailed explanation. Since I don’t want to create a new instance for every test case where I use my library, I’m going to go for test suite scope.&lt;/p&gt;

&lt;p&gt;So, a good start would be something like:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;robot.api&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pyodbc&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AlpineDB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
    Library for connecting into AP MS SQL DB.

    = Table of content =
    - Keywords
    &quot;&quot;&quot;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;ROBOT_LIBRARY_VERSION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ROBOT_LIBRARY_SCOPE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'TEST SUITE'&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;PARAM_SUBSTITUTE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'{}'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;AP_SHOP_ID_CZ&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;121&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;AP_SHOP_ID_SK&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1810&lt;/span&gt;   

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'https://inveo-alpineprocz.net'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'dev'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'test'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'{SQL Server}'&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'server'&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'database'&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pwd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'alpineprosk'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
                &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shop_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AP_SHOP_ID_SK&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shop_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AP_SHOP_ID_CZ&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'staging'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'{SQL Server}'&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'server1'&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pwd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'alpineprosk'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
                &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'database1'&lt;/span&gt;
                &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shop_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AP_SHOP_ID_SK&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'database2'&lt;/span&gt;
                &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shop_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AP_SHOP_ID_CZ&lt;/span&gt;

        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pyodbc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                   &lt;span class=&quot;n&quot;&gt;Server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                   &lt;span class=&quot;n&quot;&gt;Database&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                   &lt;span class=&quot;n&quot;&gt;uid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                   &lt;span class=&quot;n&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A few words about this. I’ve of course deleted all sensitive data like usernames, passwords, database names. I hope it’s still understandable enough. The point here is I want to use this library with different environments (against different databases and servers), so I need to create the right connection first. Therefore, there’s a bit of logic in the &lt;code class=&quot;highlighter-rouge&quot;&gt;__init__&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;As soon as I have the right connection into a database, I can write some methods that later become available as keywords in Robot framework. Let’s start easy with a method that counts a number of rows:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;build_sql_statement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sql_statement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
        Builds a SQL statemets given a SQL statements and parameters. String parameters are automatically enclosed in quotes, so no need to use quotes in params list.
        
        Example:
        | @{params}= | Create List | 1234 |
        | ${sql_statement}= | Build Sql Statement | Select * from [User] where UserId = {} | ${params} |
        &quot;&quot;&quot;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# enclose strings in quotes
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;isinstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;     

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sql_statement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PARAM_SUBSTITUTE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SQL statement requires different number of parameters.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SQL statement requires different number of parameters.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;AssertionError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SQL statement requires different number of parameters.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# add shopid condition
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sql_statement&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;' and ShopId='&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shop_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;row_count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sql_statement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
        Returns a row count given a SQL statement.
        
        Example:
        | @{params}= | Create List | 1234 |
        | ${sql_statement}= | Build Sql Statement | Select * from [User] where UserId = {} | ${params} |
        | ${row_count}= | Row Count | ${sql_statement} |
        &quot;&quot;&quot;&lt;/span&gt;        
        &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql_statement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fetchall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Instead of just one method, I also wrote method &lt;code class=&quot;highlighter-rouge&quot;&gt;build_sql_statement&lt;/code&gt;. That’s because I want to keep just sql templates that could be used with different conditions. I want to hard code as few things as possible. Plus the part with &lt;code class=&quot;highlighter-rouge&quot;&gt;ShopId&lt;/code&gt; is very much specific to my project. It turned out that one of the databases is shared across more than one test environment. The parameter that distinguishes whether a particular row belongs to this or that environment is &lt;code class=&quot;highlighter-rouge&quot;&gt;ShopId&lt;/code&gt;, so that’s why I have this little logic here when building sql statements.&lt;/p&gt;

&lt;p&gt;Method &lt;code class=&quot;highlighter-rouge&quot;&gt;row_count&lt;/code&gt; is just a simple one, I guess no explanation is needed here.&lt;/p&gt;

&lt;p&gt;Also notice that because I’m gonna use this library with Robot framework, I’m using &lt;code class=&quot;highlighter-rouge&quot;&gt;robot.api&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;logger&lt;/code&gt;. I’m also using a particular &lt;a href=&quot;https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#writing-documentation&quot;&gt;documentation style&lt;/a&gt; that allows for auto-generation of documentation for this library. It comes in handy when someone else wants to use the library after me.&lt;/p&gt;

&lt;p&gt;Just to summarize, the whole library at this point looks like this:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;robot.api&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pyodbc&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AlpineDB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
    Library for connecting into AP MS SQL DB.

    = Table of content =
    - Keywords
    &quot;&quot;&quot;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;ROBOT_LIBRARY_VERSION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ROBOT_LIBRARY_SCOPE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'TEST SUITE'&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;PARAM_SUBSTITUTE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'{}'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;AP_SHOP_ID_CZ&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;121&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;AP_SHOP_ID_SK&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1810&lt;/span&gt;   

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'https://inveo-alpineprocz.net'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'dev'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'test'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'{SQL Server}'&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'server'&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'database'&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pwd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'alpineprosk'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
                &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shop_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AP_SHOP_ID_SK&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shop_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AP_SHOP_ID_CZ&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'staging'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'{SQL Server}'&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'server1'&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pwd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'alpineprosk'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
                &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'database1'&lt;/span&gt;
                &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shop_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AP_SHOP_ID_SK&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'database2'&lt;/span&gt;
                &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shop_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AP_SHOP_ID_CZ&lt;/span&gt;

        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pyodbc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                   &lt;span class=&quot;n&quot;&gt;Server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                   &lt;span class=&quot;n&quot;&gt;Database&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                   &lt;span class=&quot;n&quot;&gt;uid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                   &lt;span class=&quot;n&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;build_sql_statement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sql_statement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
        Builds a SQL statemets given a SQL statements and parameters. String parameters are automatically enclosed in quotes, so no need to use quotes in params list.
        
        Example:
        | @{params}= | Create List | 1234 |
        | ${sql_statement}= | Build Sql Statement | Select * from [User] where UserId = {} | ${params} |
        &quot;&quot;&quot;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# enclose strings in quotes
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;isinstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;     

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sql_statement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PARAM_SUBSTITUTE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SQL statement requires different number of parameters.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SQL statement requires different number of parameters.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;AssertionError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SQL statement requires different number of parameters.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# add shopid condition
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sql_statement&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;' and ShopId='&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shop_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;row_count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sql_statement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
        Returns a row count given a SQL statement.
        
        Example:
        | @{params}= | Create List | 1234 |
        | ${sql_statement}= | Build Sql Statement | Select * from [User] where UserId = {} | ${params} |
        | ${row_count}= | Row Count | ${sql_statement} |
        &quot;&quot;&quot;&lt;/span&gt;        
        &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql_statement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fetchall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It doesn’t do much, but it’s a good start, more methods could be easily added into this structure.&lt;/p&gt;

&lt;p&gt;All I need to do is save this as a new python file inside &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;my_project&amp;gt;/Libraries/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;One last note on this. Notice the default parameter value of &lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;__init__&lt;/code&gt;. That’s not so much because I really want to use it like this, but because I use Eclipse and RED as my IDEs for Robot framework and Eclipse/RED has a particular bug here that doesn’t allow for object creation (AlpineDB in my example) when no default value is not present. The symptoms of this are that the whole library would be marked as invalid when I have my project open in Eclipse/RED, which complicates things like seeing documentation for my custom library or using intellisense. However, when run, there’s no problem even without the default value. So it’s basically just a bit more comfortable to use this workaround.&lt;/p&gt;

&lt;h3 id=&quot;robot-framework&quot;&gt;Robot Framework&lt;/h3&gt;

&lt;p&gt;Let’s now use this library inside Robot framework.&lt;/p&gt;

&lt;p&gt;To keep the structure, I’m gonna first create a new test suite inside &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;my_project&amp;gt;/Tests/&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;touch &lt;/span&gt;db.robot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then let’s create a test case that checks if only one user exists in a database using my library from above:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*** Settings ***
Documentation    Database checks and tests.  
Resource    ../Settings/alpine_tests.txt
Library    ../Libraries/AlpineDB.py    ${URL_DEV}

*** Variables ***
${no_user_in_db}=    User was not found in DB.
${too_many_users_in_db}=    User was not found in DB.

*** Test Cases ***
One User Exists In Database
    [Tags]    smoke    db
    ${params}=    Create List    ${valid_username}
    ${sql_statement}=    Build Sql Statement    ${select_user_by_email}    ${params}
    ${number_of_users}=    Row Count    ${sql_statement}
    Run Keyword If    ${number_of_users} == 0    Fail    ${no_user_in_db}
    Run Keyword If    ${number_of_users} &amp;gt; 1    Fail    ${too_many_users_in_db}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As you can see, I try to avoid hard-coded values. So I’m using variables that live inside files in &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;my_project&amp;gt;/Resources&lt;/code&gt; and are imported here via file &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;my_project&amp;gt;/Settings/alpine_tests.txt&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I’ve also mentioned something about sql templates. That’s exactly what I’m using here. One such template is in variable &lt;code class=&quot;highlighter-rouge&quot;&gt;${select_user_by_email}&lt;/code&gt;, the value of this variable is in fact &lt;code class=&quot;highlighter-rouge&quot;&gt;select_user_by_email = 'Select * from [User] u where u.Email={}'&lt;/code&gt;, this lives inside &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;my_project&amp;gt;/Resources/alpine_sql.py&lt;/code&gt; and is again imported via &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;my_project&amp;gt;/Settings/alpine_tests.txt&lt;/code&gt;. It helps keep things organised, because I can keep all sql statements in one file, so there’s no need to look at various places if I want to change something.&lt;/p&gt;

&lt;p&gt;The rest is probably clear enough, notice how my python methods have become keywords here in Robot. So I can easily call my &lt;code class=&quot;highlighter-rouge&quot;&gt;row_count&lt;/code&gt; using keyword &lt;code class=&quot;highlighter-rouge&quot;&gt;Row Count&lt;/code&gt; and my &lt;code class=&quot;highlighter-rouge&quot;&gt;build_sql_statement&lt;/code&gt; using keyword &lt;code class=&quot;highlighter-rouge&quot;&gt;Build Sql Statement&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I’ll leave running the test case up to you, but you’d do something like this:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;robot &lt;span class=&quot;nt&quot;&gt;--argumentfile&lt;/span&gt; ../arguments.txt &lt;span class=&quot;nt&quot;&gt;--test&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;One User Exists In Database&quot;&lt;/span&gt; db.robot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Based on how you set it up, you’d get reports and logs. In my case, I have them timestamped (&lt;code class=&quot;highlighter-rouge&quot;&gt;--timestampoutput&lt;/code&gt; option inside &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;my_project&amp;gt;/arguments.txt&lt;/code&gt;) and saved (option &lt;code class=&quot;highlighter-rouge&quot;&gt;--outputdir ../Results&lt;/code&gt; inside &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;my_project&amp;gt;/arguments.txt&lt;/code&gt;) into &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;my_project&amp;gt;/Results&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;documentation&quot;&gt;Documentation&lt;/h3&gt;

&lt;p&gt;I mentioned something about auto-generating the documentation for my library. It can’t be easier, all you need to do is follow the guidlines on how to write comments in the source file and then execute &lt;code class=&quot;highlighter-rouge&quot;&gt;python.libdoc&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; python.libdoc &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; html AlpineDB.py AlpineDB_Library.html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It will generate a file in the format that you know from &lt;a href=&quot;https://robotframework.org/robotframework/latest/libraries/BuiltIn.html&quot;&gt;official Robot documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I strongly recommend using it, especially if you’re not the only Tester that’s gonna use your libraries.&lt;/p&gt;

&lt;h3 id=&quot;not-reinventing-the-wheel&quot;&gt;Not Reinventing The Wheel&lt;/h3&gt;

&lt;p&gt;It’d be strange if I was the first one to think about this topic. Of course other people have done exactly that before me. But I think it’s always a good thing to take things apart and learn how they work, that’s why I wrote my own simple database library.&lt;/p&gt;

&lt;p&gt;However, if you don’t want to do the same, just use what’s already done. There is a &lt;a href=&quot;https://franz-see.github.io/Robotframework-Database-Library/api/0.5/DatabaseLibrary.html&quot;&gt;database library&lt;/a&gt; already written, you can get in on &lt;a href=&quot;https://pypi.org/project/robotframework-databaselibrary/&quot;&gt;pypi.org&lt;/a&gt; and see documentation &lt;a href=&quot;https://franz-see.github.io/Robotframework-Database-Library/api/0.5/DatabaseLibrary.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</content><author><name>Pavel Saman</name></author><summary type="html">Robot Framework is a useful tool for test automation. It’s mostly used, and suitable, for UI testing because it can be easily integrated with Selenium API. But there could also be many other libraries, either written by other people or we can come up with our own libraries that extend the number of use cases for which Robot could be used. I’ve recently needed to use Robot in a way when it looks into a DB and checks a few things there. I’m going to share with you a part of my outcome.</summary></entry><entry><title type="html">How to Write Bug Report in Jira</title><link href="http://localhost:4000/how-to-write-bug-report-in-jira.html" rel="alternate" type="text/html" title="How to Write Bug Report in Jira" /><published>2019-10-03T15:07:19+02:00</published><updated>2019-10-03T15:07:19+02:00</updated><id>http://localhost:4000/how-to-write-bug-report-in-jira</id><content type="html" xml:base="http://localhost:4000/how-to-write-bug-report-in-jira.html">&lt;p&gt;Jira is a popular tool for software development. One of the ways in which Jira is used for is bug reporting. I’ve recently faced a situation where there was no structure to bug reports in Jira, leaving it completely up to a Tester. I’ll try to argue for why this is not the best practice and how it could be improved.&lt;/p&gt;

&lt;p&gt;The following printscreen is how bugs are added into Jira.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/jira_empty.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A new bug is simply described in field: That’t exactly what I want to write about on the following lines.&lt;/p&gt;

&lt;h3 id=&quot;how-to-describe-bug&quot;&gt;How to Describe Bug&lt;/h3&gt;

&lt;p&gt;A bug needs to be described somehow. Depending on a context, it could be a long report or one sentence. However, in any situation, what needs to be described is at least:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;environment, app version&lt;/li&gt;
  &lt;li&gt;what data was used - like testing users, values in input fields etc.&lt;/li&gt;
  &lt;li&gt;how to reproduce the bug, so some steps&lt;/li&gt;
  &lt;li&gt;what the current state is&lt;/li&gt;
  &lt;li&gt;what the desired state is&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Again, each of these steps could be more or less formal, depending on a context! But a Tester always needs to think along these lines, and only then decide what format (formal, informal) to choose.&lt;/p&gt;

&lt;h3 id=&quot;how-to-improve-jira&quot;&gt;How to Improve Jira&lt;/h3&gt;

&lt;p&gt;Fairly easy, what I have a good experience with is adding a simple template that would automatically add these 4 guidelines. A Tester doesn’t need to keep everything in their head and if there’re some less experienced testers on the team, they might even use this as a reminder what not to forget when filling in new bug reports.&lt;/p&gt;

&lt;p&gt;The final Jira could look like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/jira_full.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;</content><author><name>Pavel Saman</name></author><summary type="html">Jira is a popular tool for software development. One of the ways in which Jira is used for is bug reporting. I’ve recently faced a situation where there was no structure to bug reports in Jira, leaving it completely up to a Tester. I’ll try to argue for why this is not the best practice and how it could be improved.</summary></entry><entry><title type="html">How To Ask Good Questions</title><link href="http://localhost:4000/how-to-ask-good-questions.html" rel="alternate" type="text/html" title="How To Ask Good Questions" /><published>2019-09-30T15:07:19+02:00</published><updated>2019-09-30T15:07:19+02:00</updated><id>http://localhost:4000/how-to-ask-good-questions</id><content type="html" xml:base="http://localhost:4000/how-to-ask-good-questions.html">&lt;p&gt;I feel this topic is really important for many reasons. I also have recent experience that proves people are not that good at this, or they don’t try hard enough. I’ll try to write a bit about this and hopefully convince a few about the importance of good questions.&lt;/p&gt;

&lt;h3 id=&quot;why-to-ask-good-questions&quot;&gt;Why To Ask Good Questions?&lt;/h3&gt;

&lt;p&gt;I’ll dive right in and say a few words about why I think this is absolutely crucial to ask good questions. It turns out that people ask questions when they need something. So a useful answer is usually what they hope for. However, does really anybody feel like helping other people when they pose a stupid, broad, vague etc. question? I don’t think so! Such questions tend to be avoided, answered in a similar manner, handed to somebody else or, at best, people who ask such dumb questions get, instead of an answer, a question in return. Any of these waste time and nothing gets solved.&lt;/p&gt;

&lt;h3 id=&quot;attributes-of-good-question&quot;&gt;Attributes of Good Question&lt;/h3&gt;

&lt;p&gt;When we know why to ask good questions, let’s have a look at what you should do in order to ask good questions.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Be concrete&lt;/li&gt;
  &lt;li&gt;Present details&lt;/li&gt;
  &lt;li&gt;Say what’s your objective - why are you asking in the first place? what do you want to achive? there might be a better/easier solution&lt;/li&gt;
  &lt;li&gt;Present what you have already tried and why it didn’t work or what results you got - it shows you’re not lazy and that you actually try to solve your problems first, that’s always a good strategy&lt;/li&gt;
  &lt;li&gt;Say where you have tried to look for an answer - people won’t point you towards the same resource, so you’re not wasting anybody’s time&lt;/li&gt;
  &lt;li&gt;Suggest what direction you’d take next and even ask if one of them might be the right one - it shows you’re thinking about the problem and that you try to be an active participant in finding the solution&lt;/li&gt;
  &lt;li&gt;If your question is written, read it after yourself, correct typos, grammatical errors etc. - you show you’re not illiterate :)&lt;/li&gt;
  &lt;li&gt;Don’t put the blame on anybody, rather assume you’ve missed something - it’s easy to point a finger on other people, but the odds are that you’re likely to be wrong and that you’ve missed something important&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There might be more points, but I’m sure that following just these will dramatically improve your questions, and in turn the way people respond to them. You will simply get relevant answers faster!&lt;/p&gt;

&lt;h3 id=&quot;examples-of-bad-questions&quot;&gt;Examples of Bad Questions&lt;/h3&gt;

&lt;p&gt;It’s time to show you a few beauties what should never be asked.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;This doesn't work, how can I fix it?&lt;/code&gt; Ok… what doesn’t work? Why do you want to fix it? What do you want to achive? Why should I do some thinking instead of you? What have you tried? … I can go on and on. And I’m not very willing to help you.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Im using robot framework. Both the if part and else part is executing. Can anybody help me with this? Thank you&lt;/code&gt; Where is the code? Do you really expect anybody to help you out when you can’t even provide the faulty code? What have you tried? Why should I solve your problems? Even if I’m super nice, my only answer could be just &lt;code class=&quot;highlighter-rouge&quot;&gt;yes&lt;/code&gt;, because you’re not asking how to solve the problem, you’re asking if somebody can help you…&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Why this doesn't work?&lt;/code&gt; Why do you assume it doesn’t? What do you expect to see? How did you end up in this situation?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I think I’ll stop here :)&lt;/p&gt;

&lt;h3 id=&quot;example-of-good-questions&quot;&gt;Example of Good Questions&lt;/h3&gt;

&lt;p&gt;Good questions tends to be longer, so I’ll link &lt;a href=&quot;https://sqa.stackexchange.com/questions/40564/codeception-test-data-in-annotation-codeception-reports-undefined-variable&quot;&gt;this one question I posted in sqa.stackexchange.com&lt;/a&gt;. I’m brave enought to say I asked a good question. It was concrete, I showed what steps I took, and I didn’t assume there was something wrong with Codeception, but rather I missed something. And of course I missed a fairly stupid thing. I just didn’t see that. The important thing is I got a solution/answer in 12 minutes. How long would it have taken had I asked in some broad, impolite way?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://superuser.com/questions/1480011/flask-app-inside-a-docker-container-is-not-served-to-localhost-when-using-docker/1480056#1480056&quot;&gt;Another question&lt;/a&gt; I asked. It starts with a fairly concrete title, then I presented detail steps I took and results of each one of them. I showed I checked that the container is running. I described what I didn’t see and what I expected to see. I also included versions of the products I used. All this trouble of defining my question precisely eventually led me to investigate further and I found a solution myself (which I posted there as well). Asking good questions has a strong potential to bring you to the right answer with no help at all. Sometimes you just need to summarize it and go over it once again.&lt;/p&gt;

&lt;p&gt;I hope I’ve presented enough examples on either side, so I’ll leave it here. Feel free to let me know if I missed something important.&lt;/p&gt;</content><author><name>Pavel Saman</name></author><summary type="html">I feel this topic is really important for many reasons. I also have recent experience that proves people are not that good at this, or they don’t try hard enough. I’ll try to write a bit about this and hopefully convince a few about the importance of good questions.</summary></entry><entry><title type="html">Cache HTTP Request Headers and Difference in Browsers</title><link href="http://localhost:4000/cache-http-request-headers-and-browser-differences.html" rel="alternate" type="text/html" title="Cache HTTP Request Headers and Difference in Browsers" /><published>2019-09-28T12:07:19+02:00</published><updated>2019-09-28T12:07:19+02:00</updated><id>http://localhost:4000/cache-http-request-headers-and-browser-differences</id><content type="html" xml:base="http://localhost:4000/cache-http-request-headers-and-browser-differences.html">&lt;p&gt;It’s not a big surpise that different browsers implement different things and behave differently. I’ve, however, focused on one particular area - HTTP cache request headers and how some of the main browsers of today respond to three different user actions.&lt;/p&gt;

&lt;p&gt;There are a few HTTP headers that control caching. For a full description, see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers#Caching&quot;&gt;this documentation&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers#Conditionals&quot;&gt;this&lt;/a&gt; as well. Out of these headers that are related to caching, only the following list of headers fall into either general or request header category:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Cache-Control&lt;/li&gt;
  &lt;li&gt;Pragma&lt;/li&gt;
  &lt;li&gt;Warning&lt;/li&gt;
  &lt;li&gt;If-Match&lt;/li&gt;
  &lt;li&gt;If-None-Match&lt;/li&gt;
  &lt;li&gt;If-Modified-Since&lt;/li&gt;
  &lt;li&gt;If-Unmodified-Since&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That’s still a lot of headers, leaving us with many options since they can be combined when a browser sends a request for a resource.&lt;/p&gt;

&lt;p&gt;However, I’ve taken the following browsers and tried to observe what they do (what request headers they send) after they have already visited (loaded) a particular resource (a web page).&lt;/p&gt;

&lt;p&gt;The browsers are:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Firefox 69.0.1&lt;/li&gt;
  &lt;li&gt;Chromium 76.0.3809.132&lt;/li&gt;
  &lt;li&gt;Opera 63.0.3368.66&lt;/li&gt;
  &lt;li&gt;Brave 0.67.119 (Chromium: 76.0.3809.72)&lt;/li&gt;
  &lt;li&gt;Pale Moon 28.7.0&lt;/li&gt;
  &lt;li&gt;Otter Browser 1.0.01&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As I said, I’ve first visited a site (main site of this blog actually) and all testing was done after this point. It included the following 3 actions:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Enter the same URL into address bar and press Enter&lt;/li&gt;
  &lt;li&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;F5&lt;/code&gt; on the site&lt;/li&gt;
  &lt;li&gt;Use reload button on the site&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Three simple action, yet the result surprised me.&lt;/p&gt;

&lt;h3 id=&quot;entering-url-into-address-bar&quot;&gt;Entering URL into Address Bar&lt;/h3&gt;

&lt;p&gt;Let’s start with the first action on the list and see what the browsers did:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;Browser&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;If-None-Match&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;If-Modified-Since&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;Cache-Control&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;Status code&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Mozilla&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;N&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;N&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;N&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;200 (cached)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Chromium&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Y&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Y&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;max-age=0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;304&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Opera&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Y&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Y&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;max-age=0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;304&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Brave&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Y&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Y&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;max-age=0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;304&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Pale Moon&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;N&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;N&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;N&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;200 (cached)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Otter Browser&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;N&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;N&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;N&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;200 (cached)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Values &lt;code class=&quot;highlighter-rouge&quot;&gt;Y&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;N&lt;/code&gt; were actually concrete values, but I was more interested whether these headers got sent or not, so I don’t show these concrete values here, only &lt;code class=&quot;highlighter-rouge&quot;&gt;Y&lt;/code&gt; if such a header was sent or &lt;code class=&quot;highlighter-rouge&quot;&gt;N&lt;/code&gt; if it wasn’t.&lt;/p&gt;

&lt;p&gt;As it’s obvious even here, there are differences among these browsers. Those that sent headers &lt;code class=&quot;highlighter-rouge&quot;&gt;If-None-Match&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;If-Modified-Since&lt;/code&gt; ended up with code &lt;code class=&quot;highlighter-rouge&quot;&gt;304&lt;/code&gt;, so the final page was retrieved from local cache after the resource version had been validated with the server. In these cases, no actual resource data were sent over the network. Firefox, Pale Moon and Otter Browser returned status code 200 but didn’t actually ask the server, the answer was retrieved from local cache. This is the fastest way to get a resource as there’s no traffic over the network.&lt;/p&gt;

&lt;h3 id=&quot;f5&quot;&gt;F5&lt;/h3&gt;

&lt;p&gt;How about when pressing &lt;code class=&quot;highlighter-rouge&quot;&gt;F5&lt;/code&gt; on the site?&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;Browser&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;If-None-Match&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;If-Modified-Since&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;Cache-Control&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;Status code&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Mozilla&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Y&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Y&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;max-age=0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;304&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Chromium&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Y&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Y&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;max-age=0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;304&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Opera&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Y&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Y&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;max-age=0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;304&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Brave&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Y&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Y&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;max-age=0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;304&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Pale Moon&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Y&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Y&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;max-age=0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;304&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Otter Browser&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;N&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;N&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;max-age=0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;200 (data transferred)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The browsers tend to behave in the same way, except Otter Browser.&lt;/p&gt;

&lt;h3 id=&quot;reload-button&quot;&gt;Reload Button&lt;/h3&gt;

&lt;p&gt;Finally, the last action I took in all these browsers was pressing a reload button in menu.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;Browser&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;If-None-Match&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;If-Modified-Since&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;Cache-Control&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;Status code&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Mozilla&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Y&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Y&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;max-age=0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;304&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Chromium&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Y&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Y&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;max-age=0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;304&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Opera&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Y&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Y&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;max-age=0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;304&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Brave&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Y&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Y&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;max-age=0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;304&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Pale Moon&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Y&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Y&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;max-age=0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;304&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Otter Browser&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;N&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;N&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;max-age=0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;200 (data transferred)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;These results are actually the same as in the previous situation.&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;Different browsers behave differently in terms of caching and sent cache HTTP headers. It needs to be taken into account when e.g. testing since it matters a lot where I get a resource from.&lt;/p&gt;

&lt;p&gt;Chromium, Opera, and Brave browsers seem to behave the same when it comes down to caching and cache HTTP request headers. Otter Browser doesn’t seem to use resource version at all and seem to use less caching than the other browsers. Firefox, Pale Moon and Otter Browser seem to utilize 200 cache response in one particular situation, so they display a resource with no network traffic at all.&lt;/p&gt;

&lt;p&gt;It’d be interesting to see other browsers as well, namely IE and Edge, but my current OS platform doesn’t allow me to do so. I might go into this topic later as well, so come and see if I have an update.&lt;/p&gt;</content><author><name>Pavel Saman</name></author><summary type="html">It’s not a big surpise that different browsers implement different things and behave differently. I’ve, however, focused on one particular area - HTTP cache request headers and how some of the main browsers of today respond to three different user actions.</summary></entry><entry><title type="html">Testing Input Fields</title><link href="http://localhost:4000/testing-input-fields.html" rel="alternate" type="text/html" title="Testing Input Fields" /><published>2019-09-28T10:07:19+02:00</published><updated>2019-09-28T10:07:19+02:00</updated><id>http://localhost:4000/testing-input-fields</id><content type="html" xml:base="http://localhost:4000/testing-input-fields.html">&lt;p&gt;Like it or not, a lot of time as a tester will be spent checking inputs and whether the system fails or not. One way we can do this is basically using the final product, that is via a GUI interface as a user. We can call a user testing or differently, it’s not that important to remember the eve-growing list of names in software testing, it’s important to use your own brain and think about the testing you do.&lt;/p&gt;

&lt;h3 id=&quot;input-field-under-test&quot;&gt;Input Field Under Test&lt;/h3&gt;

&lt;p&gt;Not surprisingly, there are many different fields a web page or any other app (mobile, desktop) can have. There’re input fields for text, for numbers, checkboxs, radio buttons etc. For each of them, you need to consider a bit different set of checks/tests.&lt;/p&gt;

&lt;p&gt;For this article, I’ll choose as an example a simple search field as shown here:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/search_field.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It’s a search field from a web application.&lt;/p&gt;

&lt;h3 id=&quot;what-to-test-for&quot;&gt;What to Test For?&lt;/h3&gt;

&lt;p&gt;Long time ago, I was asked this very question (a bit broader in fact, but this was part of it) during an interview. Well, as a newcomer to SW testing, I stuttered out 1 or 2 thinks in the list I utilize nowadays. I don’t feel particularly good about it now, but everyone has to start somehow.&lt;/p&gt;

&lt;p&gt;Below you can see my simple table I ca use as a checklist when testing input fields. There’re more than just 2 inputs now.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;Test&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;Check if the result is expected/valid&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;Problem&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Allowed value&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Empty value&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Far below LB&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;LB-1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;LB (low boundary)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;LB+1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;UB-1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;UB (upper boundary)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;UB+1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Far above UB&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Different data type (e.g. float into int field, different datetime format)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;String value&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;National characters (e.g. Czech, Russian, Chinese)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;White character(s)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Leading spaces + valid value&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Trailing spaces + valid value&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Leading zeros&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Leading zeros + positive sign (+)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Leading zeros + negative sign (-)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Special characters (e.g. &amp;amp;, @, /)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Type in a value&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Copy in a value (Ctrl + c and Ctrl + v)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Copy in a value using a mouse&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;max value (e.g. max int, max # of chars in a string field)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Negative value (for number fields)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Null&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NaN&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;nill&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Upper case&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Lower case&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Combination of upper and lower case&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;File name absolute path&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;File name relative path&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;File name forward slashes /&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;File name backward slashes |&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;File name combination of slashes / and |&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;File name more forward slashes //&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;File name more backward slashes |&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;ASCII 255&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Escape characters (‘, “, \, \t, \n, \0, \)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Is the value in the field remembered when going away from the page and back?&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Different browsers&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Arrows – do they work? Can I use them to find a char?&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Del – can I delete characters?&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Backspace – can I delete characters?&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Focus – go to a different window and back, where is the focus? Have the field lost it?&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;As you’ve figured out, not all these tests are applicable for every input field. When testing a search field, I don’t need to check for different ways to enter a file path. Again, take this as a general guidance and use your own judgement.&lt;/p&gt;

&lt;p&gt;There might be more to it, no I might have missed something. One interesting input field is the one for telephone numbers… when you consider all these formats one might input their phone number (722222222, 722 222 222, 0042722222222, 0042 722 222 222, +420722222222, +420 722 222 222, foreign phone numbers, how about leading and trailing white characters (someone might press space by mistake) etc.), on the other hand, I consider all these nuances under the “different data type” row. That’s where your creativity and judgement come in.&lt;/p&gt;

&lt;p&gt;Hope it will make you consider more tests in the future. If you want to download a spreadsheet with the table, &lt;a href=&quot;/files/input_fields_checkbox.ods&quot;&gt;get it here&lt;/a&gt;.&lt;/p&gt;</content><author><name>Pavel Saman</name></author><summary type="html">Like it or not, a lot of time as a tester will be spent checking inputs and whether the system fails or not. One way we can do this is basically using the final product, that is via a GUI interface as a user. We can call a user testing or differently, it’s not that important to remember the eve-growing list of names in software testing, it’s important to use your own brain and think about the testing you do.</summary></entry><entry><title type="html">Testing Book to Read</title><link href="http://localhost:4000/testing-book-to-read.html" rel="alternate" type="text/html" title="Testing Book to Read" /><published>2019-09-27T08:07:19+02:00</published><updated>2019-09-27T08:07:19+02:00</updated><id>http://localhost:4000/testing-book-to-read</id><content type="html" xml:base="http://localhost:4000/testing-book-to-read.html">&lt;p&gt;A quick recommendation on what to read in the field of software testing.&lt;/p&gt;

&lt;p&gt;I’ve recently got to read this book about software testing:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/testing_book.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I must say this is absolutely amazing book about the field. I won’t go into details here but I definitely recommend this one.&lt;/p&gt;

&lt;p&gt;Perhaps not a new one, but the advice is timely and could be applied or considered any time, even in today environment.&lt;/p&gt;

&lt;p&gt;Enjoy reading.&lt;/p&gt;</content><author><name>Pavel Saman</name></author><summary type="html">A quick recommendation on what to read in the field of software testing.</summary></entry><entry><title type="html">Harry Potter Word Frequency</title><link href="http://localhost:4000/harry-potter-word-frequency.html" rel="alternate" type="text/html" title="Harry Potter Word Frequency" /><published>2019-09-26T15:07:19+02:00</published><updated>2019-09-26T15:07:19+02:00</updated><id>http://localhost:4000/harry-potter-word-frequency</id><content type="html" xml:base="http://localhost:4000/harry-potter-word-frequency.html">&lt;p&gt;In language acquisition, there’s the idea of the most common words in a language. It can be interesting to know this when learning a new language. I’ll try to analyze &lt;em&gt;Harry Potter and the Philosopher’s Stone&lt;/em&gt; in order to show word frequency and how many of the 1000 most common English words are represented in the book, so one has an idea how much of the book is possible to read when knowing only this set of words (of course it’s a simplification, but an interesting one).&lt;/p&gt;

&lt;h3 id=&quot;plain-text&quot;&gt;Plain Text&lt;/h3&gt;

&lt;p&gt;Number one task I have is to get the book in plain text, so I can process it. I’ve found it online &lt;a href=&quot;http://anyflip.com/dlgr/thrn/basic&quot;&gt;on this website&lt;/a&gt;. To see just first 10 lines to get an idea, the file looks like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Harry Potter and the Sorcerer's Stone

CHAPTER ONE

THE BOY WHO LIVED

Mr. and Mrs. Dursley, of number four, Privet Drive, were proud to say
that they were perfectly normal, thank you very much. They were the last
people you'd expect to be involved in anything strange or mysterious,
because they just didn't hold with such nonsense.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;clearing-the-data&quot;&gt;Clearing the Data&lt;/h3&gt;

&lt;p&gt;When I have a look at the file, there’re a few problems with the text:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;some words use both &lt;code class=&quot;highlighter-rouge&quot;&gt;[A-Z]&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;[a-z]&lt;/code&gt; ranges&lt;/li&gt;
  &lt;li&gt;there are some numbers (page numbers etc.) that I don’t consider as numbers&lt;/li&gt;
  &lt;li&gt;there are empty lines&lt;/li&gt;
  &lt;li&gt;there’s punctuation that can spoil individual words&lt;/li&gt;
  &lt;li&gt;but not all &lt;code class=&quot;highlighter-rouge&quot;&gt;[[:punct:]]&lt;/code&gt; is problematic - e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;you've&lt;/code&gt; is alright&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I need to get rid of all these data, so I have a “clean” text as input for frequency analysis.&lt;/p&gt;

&lt;h4 id=&quot;upper-to-lowercase&quot;&gt;Upper to Lowercase&lt;/h4&gt;

&lt;p&gt;This is fairly easy to do:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;hpps | &lt;span class=&quot;nb&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'[A-Z]'&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'[a-z]'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Done.&lt;/p&gt;

&lt;h4 id=&quot;punctuation&quot;&gt;Punctuation&lt;/h4&gt;

&lt;p&gt;I want to delete some punctuation:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;s/[,;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\!&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;?.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;()-]//g&quot;&lt;/span&gt; hpps
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;no-empty-lines&quot;&gt;No Empty Lines&lt;/h4&gt;

&lt;p&gt;Empty lines spoil the data as well, get rid of them:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;^$&quot;&lt;/span&gt; hpps
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;getting-rid-of-numbers&quot;&gt;Getting rid of numbers&lt;/h4&gt;

&lt;p&gt;I need get rid of numbers. This turns out to be a little bit of problem as I’ve discovered some of the numbers are juxtaposed to other characters such as &lt;code class=&quot;highlighter-rouge&quot;&gt;'&lt;/code&gt;. The solution is to use this after other steps as well.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-E&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;^[0-9]+$&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After these steps, first 10 lines look like this:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;harry potter and the sorcerer's stone
chapter one
the boy who lived
mr and mrs dursley of number four privet drive were proud to say
that they were perfectly normal thank you very much they were the last
people you'd expect to be involved in anything strange or mysterious
because they just didn't hold with such nonsense
mr dursley was the director of a firm called grunnings which made
drills he was a big beefy man with hardly any neck although he did
have a very large mustache mrs dursley was thin and blonde and had
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That’s much better, but I still want to transform the data a bit more.&lt;/p&gt;

&lt;h3 id=&quot;word-per-line&quot;&gt;Word per Line&lt;/h3&gt;

&lt;p&gt;Let’s put each word on a single line:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;s/[[:space:]]/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/g&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But the problem now is some of the “words” look like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;'please'
's'
'f'
'gar'
'yes
'jordan
'nmat
'dumbledore
'til
'hocus
'cause
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I don’t want to consider these to be words since I don’t like the apostrophe. Let’s clean it further:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;^'&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and at the end:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;'$&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now it looks much cleaner:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;harry
potter
and
the
sorcerer's
stone
chapter
one
the
boy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If I try to find numbers:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;0-9]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I get:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;4
4
17
1
31
3
0
1
2
3
4
1
2
382
1945
31
3
1473
1945
1709
1637
90
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I filter out such lines again:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-E&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;^[0-9]+$&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The same has to be done with empty lines:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;^$&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Finally, I consider the input data clean. Let’s see some basic statistics:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;wc&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; hpps_cleaned
76967 hpps_cleaned
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That’s how many words are in the book :) The file could be downloaded &lt;a href=&quot;/files/hpps_cleaned&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;most-frequent-words&quot;&gt;Most Frequent Words&lt;/h3&gt;

&lt;p&gt;I can finally count frequency of each words. I’ll use &lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; for that and sort the output:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{!word[$1]++} END{for (w in word) {print w,word[w]}}'&lt;/span&gt; hpps_cleaned | &lt;span class=&quot;nb&quot;&gt;sort&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-k2&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-10&lt;/span&gt;
the 3621
and 1914
to 1852
a 1682
he 1526
of 1254
harry 1208
was 1182
it 1022
&lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;962
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The first most common words in the book are not a big suprise. There’re mostly prepositions, articles, and one name (I should have got rid of that). The complete sorted list could be downloaded &lt;a href=&quot;/files/hpps_frequency_sorted&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If I count the number of unique words, I get:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;wc&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; hpps_frequency_sorted
5990 hpps_frequency_sorted
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Again, there are “words” like &lt;code class=&quot;highlighter-rouge&quot;&gt;pomfrey's&lt;/code&gt; which are not ideal from at least two reasons:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;they contain names&lt;/li&gt;
  &lt;li&gt;they contain short forms (&lt;code class=&quot;highlighter-rouge&quot;&gt;'s&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;'ve&lt;/code&gt; etc.)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;However, I still consider this list a pretty decent approximation.&lt;/p&gt;

&lt;h3 id=&quot;1000-most-common-english-words&quot;&gt;1000 Most Common English Words&lt;/h3&gt;

&lt;p&gt;Another interesting point of view could be to have a look at the first 1000 most common English words and see how many of them are represented in this text. Such a list could be found on different places, they even vary a bit since the underlying inputs could have been different. For my analysis, I’ve used &lt;a href=&quot;https://github.com/first20hours/google-10000-english/blob/master/google-10000-english.txt&quot;&gt;this one&lt;/a&gt;. You actually get 10000 most common English words, so I cut the list:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'(NR &amp;lt;= 1000) {print}'&lt;/span&gt; 10000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The rest is to go over my harry-potter file and this 1000 file and perform some counting on it:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'(FILENAME == &quot;1000&quot;) {!x[$1]++} (FILENAME == &quot;hpps_cleaned&quot;) {!y[$1]++} END{for (w in x) { if(y[w]) {c++}} print c}'&lt;/span&gt; 1000 hpps_cleaned 
615
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;615 words from the list of the 1000 most common English words are in the Harry Potter book. I can see how much of the original text is represented by these 615 words:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'(FILENAME == &quot;1000&quot;) {!x[$1]++} (FILENAME == &quot;hpps_cleaned&quot;) {!y[$1]++} END{for (w in x) { if(y[w]) {c+=y[w]}} print c}'&lt;/span&gt; 1000 hpps_cleaned 
47216
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If someone learns the list of the 1000 most common English words, they can read about 61 % of &lt;em&gt;Harry Potter and the Philosopher’s Stone&lt;/em&gt;. I can calculate the same thing for a few more values of the most common English words and see what’s gonna happen to the coverage in the book:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/hpps_word_coverage.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So for the 5000 most common English words, the coverage of &lt;em&gt;Harry Potter and the Philosopher’s Stone&lt;/em&gt; is nearly 79 %. Still, it doesn’t mean you can read the book easily, 79 % of the text understood is not enough for easy comprehension. Another thing to notice here is the developement of these numbers. The more words I learn from the list of the most common English words, the higher the coverage, but it’s not a linear function. It suggests the strategy of learning frequency words is not always effective. The more one knows, the more one needs to study low frequency words that are outside of the range of any list of most common words.&lt;/p&gt;

&lt;p&gt;Next, I can have a look at the words that are outside of the range of the 1000 most common English words according to my list presented above:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'(FILENAME == &quot;1000&quot;) {!x[$1]++} (FILENAME == &quot;hpps_cleaned&quot;) {!y[$1]++} END{for (w in y) { if(! x[w]) {print w}}}'&lt;/span&gt; 1000 hpps_cleaned
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;These are the words in the Harry Potter book but outside of the 1000 most common English words. That’s the remaining 5375 unique words. The complete list cound be downloaded &lt;a href=&quot;/files/words_outside_1000_range&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If I take a look as some of them:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;that's
blackpool
closer
coats
dampen
wriggles
vanished
fastenings
elephant
died
cage
reason
morning
globes
curiously
toads
tulips
staffroom
bobbing
squashy
hurts
lord
looming
mmm
plates
snape
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I still can see the underlying data could be improved. There’re names and short forms, both of which spoil the data and provide less accurate result. The rest are words not so frequent or words related to this specific wizarding world (like &lt;code class=&quot;highlighter-rouge&quot;&gt;toads&lt;/code&gt; (sort of anyway)).&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;There could be much more to say about this. You can play around with the data to find more. I’ll, however, bring it to a conlusion here. What I see here is mostly language learning advice, since that’s why I started on this article in the first place.&lt;/p&gt;

&lt;p&gt;Many articles and/or advice say that knowing just a few thousands of the most common English words is enough. I, based on this article, disagree. Even with the 5000 most common English words, one can comprehend only roughly 79 % of the book in question. That’s not enough for easy and pleasurable reading. One simply has to study even low frequency words that are outside of this range. The article even suggests that the strategy proves inefficient after a few thousands most common words learnt. The increments are simply too small.&lt;/p&gt;

&lt;p&gt;From the point of view of the analysis, I can only say it’s amazing how much information one can get with just a couple of text processing tools. If I should do something similar again, I consider the data cleaning part the most important part of the whole process. If my input is correct, the results get even more precise.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; this article has left out many other points. E.g. you can’t really read much if you lack the knowledge of grammar.&lt;/p&gt;</content><author><name>Pavel Saman</name></author><summary type="html">In language acquisition, there’s the idea of the most common words in a language. It can be interesting to know this when learning a new language. I’ll try to analyze Harry Potter and the Philosopher’s Stone in order to show word frequency and how many of the 1000 most common English words are represented in the book, so one has an idea how much of the book is possible to read when knowing only this set of words (of course it’s a simplification, but an interesting one).</summary></entry><entry><title type="html">Upgrading BIOS on Dell Laptop</title><link href="http://localhost:4000/upgrading-bios-on-dell-laptop.html" rel="alternate" type="text/html" title="Upgrading BIOS on Dell Laptop" /><published>2019-09-25T15:07:19+02:00</published><updated>2019-09-25T15:07:19+02:00</updated><id>http://localhost:4000/upgrading-bios-on-dell-laptop</id><content type="html" xml:base="http://localhost:4000/upgrading-bios-on-dell-laptop.html">&lt;p&gt;Just a quick article on how to find out BIOS version and how to get an update, and finally how to upgrade it.&lt;/p&gt;

&lt;p&gt;I’ve recently done exactly this on my Dell E5550 laptop.&lt;/p&gt;

&lt;p&gt;First, my BIOS version was A06:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;dmidecode &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; bios-version
A06
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next question is how to find out if there’s a new version for my laptop. I had to first get a serial number of my machine:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;dmidecode &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; system-serial-number
xxxxx &lt;span class=&quot;c&quot;&gt;# don't want to make it public&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then on &lt;a href=&quot;https://www.dell.com/support/home/uk/en/ukdhs1&quot;&gt;Dell website&lt;/a&gt;, I copy-pasted my serial number and let the system find new updates.&lt;/p&gt;

&lt;p&gt;Surely, there was a new BIOS version &lt;code class=&quot;highlighter-rouge&quot;&gt;A21&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It’s always an &lt;code class=&quot;highlighter-rouge&quot;&gt;.exe&lt;/code&gt; file, no matter what OS you have. There’s also a good tutorial on how to upgrade BIOS on Linux machines. The tutorial there is for Ubuntu since that’s an OS Dell delivers on its machines.&lt;/p&gt;

&lt;p&gt;Then, I had to do a few more things:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I downloaded the &lt;code class=&quot;highlighter-rouge&quot;&gt;.exe&lt;/code&gt; file&lt;/li&gt;
  &lt;li&gt;I verified checksums of the downloaded file against what Dell has on their website&lt;/li&gt;
  &lt;li&gt;I formatted a usb flash drive, it’s important to use FAT 32
In my case, I used &lt;code class=&quot;highlighter-rouge&quot;&gt;fsdisk&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;mkfs.fat&lt;/code&gt; tools, but it’s possible to use some other tools, e.g. GUI tools present in your distro.&lt;/li&gt;
  &lt;li&gt;I copied the &lt;code class=&quot;highlighter-rouge&quot;&gt;.exe&lt;/code&gt; file onto my flash drive&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Then it’s all about rebooting, pressing &lt;code class=&quot;highlighter-rouge&quot;&gt;F12&lt;/code&gt; and selecting &lt;code class=&quot;highlighter-rouge&quot;&gt;BIOS Flash Update&lt;/code&gt;. The rest should be automatic and if there’re no problems, the BIOS should be upgraded to a new version (in my case A21), which I can confirm either in BIOS setup or after boot in my OS:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;dmidecode &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; bios-version
A21
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Pavel Saman</name></author><summary type="html">Just a quick article on how to find out BIOS version and how to get an update, and finally how to upgrade it.</summary></entry><entry><title type="html">Cookies in Firefox</title><link href="http://localhost:4000/cookies-in-firefox.html" rel="alternate" type="text/html" title="Cookies in Firefox" /><published>2019-09-24T09:07:19+02:00</published><updated>2019-09-24T09:07:19+02:00</updated><id>http://localhost:4000/cookies-in-firefox</id><content type="html" xml:base="http://localhost:4000/cookies-in-firefox.html">&lt;p&gt;This is just a quick tip on how to see all cookies stored in Firefox.&lt;/p&gt;

&lt;p&gt;On Linux, Firefox creates a directory in &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.mozilla&lt;/code&gt;, inside that there are more stuff, but in terms of cookies, I need to go into a directory dedicated to my current profile, so sth like &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.mozilla/firefox/av1831zo.default&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In here, there are two files:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ll | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;cookie
&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;  1 pavel pavel 1.0M Sep 24 18:13 cookies.sqlite
&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;  1 pavel pavel 577K Sep 24 18:14 cookies.sqlite-wal
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Firefox uses sqlite database, which is only one file, but it could be used as a simple database, e.g. I can query it using SQL commands. For that I use &lt;code class=&quot;highlighter-rouge&quot;&gt;sqlitebrowser&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pacman &lt;span class=&quot;nt&quot;&gt;-Qs&lt;/span&gt; sqlitebrowser
&lt;span class=&quot;nb&quot;&gt;local&lt;/span&gt;/sqlitebrowser 3.11.2-1
    SQLite Database browser is a light GUI editor &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;SQLite databases, built on top of Qt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If your Firefox is open, I don’t really succeed in opening the file &lt;code class=&quot;highlighter-rouge&quot;&gt;cookies.sqlite&lt;/code&gt;, it’s locked:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/cookies_locked.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In this case, just copy the file elsewhere or close Firefox.&lt;/p&gt;

&lt;p&gt;After opening the file in &lt;code class=&quot;highlighter-rouge&quot;&gt;sqlitebrowser&lt;/code&gt;, I can query it e.g. all secure cookies currently stored in my Firefox profile:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moz_cookies&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isSecure&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/images/sqlitebrowser.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;</content><author><name>Pavel Saman</name></author><summary type="html">This is just a quick tip on how to see all cookies stored in Firefox.</summary></entry><entry><title type="html">wlp2s0, eno1 - where do they come from?</title><link href="http://localhost:4000/wlp2s0-eno1-where-do-they-come-from.html" rel="alternate" type="text/html" title="wlp2s0, eno1 - where do they come from?" /><published>2019-09-22T09:07:19+02:00</published><updated>2019-09-22T09:07:19+02:00</updated><id>http://localhost:4000/wlp2s0-eno1-where-do-they-come-from</id><content type="html" xml:base="http://localhost:4000/wlp2s0-eno1-where-do-they-come-from.html">&lt;p&gt;I have recently wondered about why network interfaces in Linux have these, at first glance, obscure names. I vaguely remember it used to be more like eth0, wlan0. So I found a bit more info about it, let’s summarize it here.&lt;/p&gt;

&lt;p&gt;First of all, it really is true that the names used to be simple like eth0, wlan0. These names used to be assigned by the kernel. The problem, however, was that if more interfaces were present (say more enthernet interfaces), the names could change from boot to boot. And that is not very useful since other settings like firewall rules could rely on stable naming schemes.&lt;/p&gt;

&lt;p&gt;Alright, so there’s obviously a need for stable names that do not change from boot to boot. Therefore there’s udev that is nowadays used for assigning persistent names to network interfaces. There’s a &lt;a href=&quot;https://www.freedesktop.org/wiki/Software/systemd/PredictableNetworkInterfaceNames/&quot;&gt;good document&lt;/a&gt; about it.&lt;/p&gt;

&lt;p&gt;I think the key part is the algorithm used for determining the names:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. Names incorporating Firmware/BIOS provided index numbers for on-board devices (example: eno1)
2. Names incorporating Firmware/BIOS provided PCI Express hotplug slot index numbers (example: ens1)
3. Names incorporating physical/geographical location of the connector of the hardware (example: enp2s0)
4. Names incorporating the interfaces's MAC address (example: enx78e7d1ea46da)
5. Classic, unpredictable kernel-native ethX naming (example: eth0)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It would also be useful to see this in more detail, let’s have a look into the &lt;a href=&quot;https://github.com/systemd/systemd/blob/master/src/udev/net/link-config.c#L403&quot;&gt;code&lt;/a&gt;. There I can see the case statement that goes like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. ID_NET_NAME_FROM_DATABASE
2. ID_NET_NAME_ONBOARD
3. ID_NET_NAME_SLOT
4. ID_NET_NAME_PATH
5. ID_NET_NAME_MAC
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Knowing this, I’ll find out what’s the situation on my system. I’ll show the process for my wifi interface.&lt;/p&gt;

&lt;p&gt;First, I get the name of such an interface:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ip a
...
3: wlp2s0: &amp;lt;NO-CARRIER,BROADCAST,MULTICAST,UP&amp;gt; mtu 1500 qdisc mq state DOWN group default qlen 1000
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then, I will find out more about my interface using utility &lt;code class=&quot;highlighter-rouge&quot;&gt;udevadm&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;udevadm info &lt;span class=&quot;nt&quot;&gt;--path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/sys/class/net/wlp2s0
P: /devices/pci0000:00/0000:00:1c.3/0000:02:00.0/net/wlp2s0
L: 0
E: &lt;span class=&quot;nv&quot;&gt;DEVPATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/devices/pci0000:00/0000:00:1c.3/0000:02:00.0/net/wlp2s0
E: &lt;span class=&quot;nv&quot;&gt;DEVTYPE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wlan
E: &lt;span class=&quot;nv&quot;&gt;INTERFACE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wlp2s0
E: &lt;span class=&quot;nv&quot;&gt;IFINDEX&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3
E: &lt;span class=&quot;nv&quot;&gt;SUBSYSTEM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;net
E: &lt;span class=&quot;nv&quot;&gt;USEC_INITIALIZED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4181766
E: &lt;span class=&quot;nv&quot;&gt;ID_NET_NAMING_SCHEME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;v240
E: &lt;span class=&quot;nv&quot;&gt;ID_NET_NAME_MAC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wlx94659c7f5855
E: &lt;span class=&quot;nv&quot;&gt;ID_OUI_FROM_DATABASE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Intel Corporate
E: &lt;span class=&quot;nv&quot;&gt;ID_NET_NAME_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wlp2s0
E: &lt;span class=&quot;nv&quot;&gt;ID_BUS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;pci
E: &lt;span class=&quot;nv&quot;&gt;ID_VENDOR_ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0x8086
E: &lt;span class=&quot;nv&quot;&gt;ID_MODEL_ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0x095a
E: &lt;span class=&quot;nv&quot;&gt;ID_PCI_CLASS_FROM_DATABASE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Network controller
E: &lt;span class=&quot;nv&quot;&gt;ID_PCI_SUBCLASS_FROM_DATABASE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Network controller
E: &lt;span class=&quot;nv&quot;&gt;ID_VENDOR_FROM_DATABASE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Intel Corporation
E: &lt;span class=&quot;nv&quot;&gt;ID_MODEL_FROM_DATABASE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Wireless 7265 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Dual Band Wireless-AC 7265&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
E: &lt;span class=&quot;nv&quot;&gt;ID_MM_CANDIDATE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1
E: &lt;span class=&quot;nv&quot;&gt;ID_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;pci-0000:02:00.0
E: &lt;span class=&quot;nv&quot;&gt;ID_PATH_TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;pci-0000_02_00_0
E: &lt;span class=&quot;nv&quot;&gt;ID_NET_DRIVER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;iwlwifi
E: &lt;span class=&quot;nv&quot;&gt;ID_NET_LINK_FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/lib/systemd/network/99-default.link
E: &lt;span class=&quot;nv&quot;&gt;ID_NET_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wlp2s0
E: &lt;span class=&quot;nv&quot;&gt;SYSTEMD_ALIAS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/sys/subsystem/net/devices/wlp2s0 /sys/subsystem/net/devices/wlp2s0
E: &lt;span class=&quot;nv&quot;&gt;TAGS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;:systemd:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I can already see that the first match is &lt;code class=&quot;highlighter-rouge&quot;&gt;ID_NET_NAME_PATH&lt;/code&gt;, therefore such a name is used. If I look into &lt;code class=&quot;highlighter-rouge&quot;&gt;lspci&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;lspci
...
02:00.0 Network controller: Intel Corporation Wireless 7265 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rev 59&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I can see the interface is on bus 2, slot 0, so then I just need to figure out how udev worked from that to &lt;code class=&quot;highlighter-rouge&quot;&gt;wlp2s0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It turns out the naming scheme works like this:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;if it’s ethernet, the prefix will be &lt;code class=&quot;highlighter-rouge&quot;&gt;en&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;if it’s wlan, the prefix will be &lt;code class=&quot;highlighter-rouge&quot;&gt;wl&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;if it’s wwlan, the prefix will be &lt;code class=&quot;highlighter-rouge&quot;&gt;ww&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;there could also be &lt;code class=&quot;highlighter-rouge&quot;&gt;sl&lt;/code&gt; for serial line IP (slip), which I don’t really know what it means now&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Then the other letters will be:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;p&lt;/code&gt; for bus&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;s&lt;/code&gt; for slot&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;f&lt;/code&gt; for function&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt; for MAC address&lt;/li&gt;
  &lt;li&gt;and some other options as well that I’m not familiarized with for now&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In my case, it’s a wlan interface, therefore we start with &lt;code class=&quot;highlighter-rouge&quot;&gt;wl&lt;/code&gt; prefix, then the name is determined based on rule number 4 (&lt;code class=&quot;highlighter-rouge&quot;&gt;ID_NET_NAME_PATH&lt;/code&gt;) from the above algorithm. The bus number is 2, therefore &lt;code class=&quot;highlighter-rouge&quot;&gt;p2&lt;/code&gt; and the slot is 0, therefore &lt;code class=&quot;highlighter-rouge&quot;&gt;s0&lt;/code&gt;. It leaves me with the name &lt;code class=&quot;highlighter-rouge&quot;&gt;wlp2s0&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;changing-the-name&quot;&gt;Changing the Name&lt;/h3&gt;

&lt;p&gt;The names should be persistent just based on the automatic procedure described above, yet for my home use on my laptop, I’d like to have a different name, preferably like the historic names (wlan0 etc.).&lt;/p&gt;

&lt;p&gt;Udev also allows for custom naming schemes that take precedence over the algorithm described above. I did exactly that.&lt;/p&gt;

&lt;p&gt;It really boils down to only one file in &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/udev/rules.d&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;20-wlan.rules 
&lt;span class=&quot;nv&quot;&gt;SUBSYSTEM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;net&quot;&lt;/span&gt;, &lt;span class=&quot;nv&quot;&gt;DEVPATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/devices/pci0000:00/0000:00:1c.3/0000:02:00.0/net/*&quot;&lt;/span&gt;, &lt;span class=&quot;nv&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wlan0&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I just used information provided by &lt;code class=&quot;highlighter-rouge&quot;&gt;udevadm&lt;/code&gt; utility. It’s already shown above.&lt;/p&gt;

&lt;p&gt;On next boot, my wlan interface will be again named &lt;code class=&quot;highlighter-rouge&quot;&gt;wlan0&lt;/code&gt;. Another look with &lt;code class=&quot;highlighter-rouge&quot;&gt;udevadm&lt;/code&gt; shows an alias:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;udevadm info &lt;span class=&quot;nt&quot;&gt;--path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/sys/class/net/wlan0
P: /devices/pci0000:00/0000:00:1c.3/0000:02:00.0/net/wlan0
L: 0
E: &lt;span class=&quot;nv&quot;&gt;DEVPATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/devices/pci0000:00/0000:00:1c.3/0000:02:00.0/net/wlan0
E: &lt;span class=&quot;nv&quot;&gt;DEVTYPE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wlan
E: &lt;span class=&quot;nv&quot;&gt;INTERFACE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wlan0
E: &lt;span class=&quot;nv&quot;&gt;IFINDEX&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3
E: &lt;span class=&quot;nv&quot;&gt;SUBSYSTEM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;net
E: &lt;span class=&quot;nv&quot;&gt;USEC_INITIALIZED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4285178
E: &lt;span class=&quot;nv&quot;&gt;ID_NET_NAMING_SCHEME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;v240
E: &lt;span class=&quot;nv&quot;&gt;ID_NET_NAME_MAC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wlx94659c7f5855
E: &lt;span class=&quot;nv&quot;&gt;ID_OUI_FROM_DATABASE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Intel Corporate
E: &lt;span class=&quot;nv&quot;&gt;ID_NET_NAME_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wlp2s0
E: &lt;span class=&quot;nv&quot;&gt;ID_BUS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;pci
E: &lt;span class=&quot;nv&quot;&gt;ID_VENDOR_ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0x8086
E: &lt;span class=&quot;nv&quot;&gt;ID_MODEL_ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0x095a
E: &lt;span class=&quot;nv&quot;&gt;ID_PCI_CLASS_FROM_DATABASE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Network controller
E: &lt;span class=&quot;nv&quot;&gt;ID_PCI_SUBCLASS_FROM_DATABASE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Network controller
E: &lt;span class=&quot;nv&quot;&gt;ID_VENDOR_FROM_DATABASE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Intel Corporation
E: &lt;span class=&quot;nv&quot;&gt;ID_MODEL_FROM_DATABASE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Wireless 7265 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Dual Band Wireless-AC 7265&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
E: &lt;span class=&quot;nv&quot;&gt;ID_MM_CANDIDATE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1
E: &lt;span class=&quot;nv&quot;&gt;ID_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;pci-0000:02:00.0
E: &lt;span class=&quot;nv&quot;&gt;ID_PATH_TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;pci-0000_02_00_0
E: &lt;span class=&quot;nv&quot;&gt;ID_NET_DRIVER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;iwlwifi
E: &lt;span class=&quot;nv&quot;&gt;ID_NET_LINK_FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/lib/systemd/network/99-default.link
E: &lt;span class=&quot;nv&quot;&gt;ID_NET_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wlp2s0
E: &lt;span class=&quot;nv&quot;&gt;SYSTEMD_ALIAS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/sys/subsystem/net/devices/wlan0
E: &lt;span class=&quot;nv&quot;&gt;TAGS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;:systemd:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And my interface is renamed:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ip a
...
3: wlan0: &amp;lt;NO-CARRIER,BROADCAST,MULTICAST,UP&amp;gt; mtu 1500 qdisc mq state DOWN group default qlen 1000
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Pavel Saman</name></author><summary type="html">I have recently wondered about why network interfaces in Linux have these, at first glance, obscure names. I vaguely remember it used to be more like eth0, wlan0. So I found a bit more info about it, let’s summarize it here.</summary></entry></feed>