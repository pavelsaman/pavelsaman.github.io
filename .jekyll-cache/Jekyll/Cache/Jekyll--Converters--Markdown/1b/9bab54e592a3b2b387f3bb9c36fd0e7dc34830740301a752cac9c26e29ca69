I"<p>Awk is a useful tool for text processing. I’ve recently wanted to process a log generated by Network Manager. I’ll show you just a simple awk script that helped me get the data I wanted. I find it useful to get some practice in awk, so I’ll try out some awk oneliners here.</p>

<p>The log is in two file in <code class="highlighter-rouge">/var/log</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">-rw-r--r--</span>   1 root   root            4.6K Sep 20 15:10 NetworkManager-dispatcher.d.log
<span class="nt">-rw-r--r--</span>   1 root   root             11K Sep 15 00:00 NetworkManager-dispatcher.d.log.1
</code></pre></div></div>

<p>The file content is in the following format:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>2019-09-13T19:16:28,914713963+00:00 | DEVICE: wlp2s0 | STATUS: up | UUID: 3d4d912a-6432-4a36-8cf2-1b2acf115134 | ID: test | IP4_GATEWAY: 192.168.1.1 | IP4_NAMESERVERS: 8.8.8.8
2019-09-14T08:41:05,898951891+00:00 | DEVICE: eno1 | STATUS: up | UUID: ac187d12-fffe-35e9-bbca-91f79cea61f1 | ID: Wired connection 1 | IP4_GATEWAY: 192.168.1.1 | IP4_NAMESERVERS: 8.8.8.8
2019-09-14T08:41:06,766934167+00:00 | DEVICE: wlp2s0 | STATUS: up | UUID: 3d4d912a-6432-4a36-8cf2-1b2acf115134 | ID: test | IP4_GATEWAY: 192.168.1.1 | IP4_NAMESERVERS: 8.8.8.8
2019-09-14T16:15:19,264672512+00:00 | DEVICE: eno1 | STATUS: up | UUID: ac187d12-fffe-35e9-bbca-91f79cea61f1 | ID: Wired connection 1 | IP4_GATEWAY: 192.168.1.1 | IP4_NAMESERVERS: 8.8.8.8
2019-09-14T16:15:20,021135139+00:00 | DEVICE: wlp2s0 | STATUS: up | UUID: 3d4d912a-6432-4a36-8cf2-1b2acf115134 | ID: test | IP4_GATEWAY: 192.168.1.1 | IP4_NAMESERVERS: 8.8.8.8
2019-09-15T21:04:26,478777580+00:00 | DEVICE: wlp2s0 | STATUS: down | UUID: 026ecf86-832e-4251-8e11-3d33558f1119 | ID: Test | IP4_GATEWAY:  | IP4_NAMESERVERS: 
</code></pre></div></div>

<p>For every <code class="highlighter-rouge">up</code> or <code class="highlighter-rouge">down</code> status, there’s one line with date and time, device name, status, UUID of the network, ID of the network, IPv4 address, and an array of nameservers.</p>

<p>I’ll now run a few awk commands to process the file and get some interesting statistics.</p>

<h4 id="i-want-to-know-how-many-times-ive-connected-to-a-network">I want to know how many times I’ve connected to a network:</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">awk</span> <span class="nt">-F</span><span class="s1">'|'</span> <span class="s1">'($3 ~ /up/) { c++ } END {print c}'</span> /var/log/NetworkManager-dispatcher.d.log<span class="k">*</span>
</code></pre></div></div>

<p>No need to write <code class="highlighter-rouge">if</code>, I can just type <code class="highlighter-rouge">(pattern)</code> and apply <code class="highlighter-rouge">{action}</code>.</p>

<h4 id="i-want-to-know-what-networks-ive-connected-to">I want to know what networks I’ve connected to:</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">awk</span> <span class="nt">-F</span><span class="s1">'|'</span> <span class="s1">'($3 ~ /up/) {net[$4]++} END{for (n in net) {print substr(n,2)}}'</span> /var/log/NetworkManager-dispatcher.d.log<span class="k">*</span>
</code></pre></div></div>

<p>Awk has some functions I can use. I can even create my own functions in awk.</p>

<h4 id="i-want-to-know-what-networks-ive-connected-to--how-many-times">I want to know what networks I’ve connected to + how many times:</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">awk</span> <span class="nt">-F</span><span class="s1">'|'</span> <span class="s1">'($3 ~ /up/) {net[$4]++} END{for (n in net) {print substr(n,index(n,":")+2,length(substr(n,index(n,":")+2))-1),net[n]}}'</span> <span class="nv">OFS</span><span class="o">=</span><span class="s1">'|'</span> /var/log/NetworkManager-dispatcher.d.log<span class="k">*</span>
</code></pre></div></div>
<p><code class="highlighter-rouge">OFS</code> changes the Output Field Separator. I can also beautify the output by getting rif od some whitespaces etc. by using <code class="highlighter-rouge">substr</code>, <code class="highlighter-rouge">index</code>, and <code class="highlighter-rouge">length</code> functions.</p>

<h4 id="i-want-to-add-the-network-id-to-the-previous-output">I want to add the network ID to the previous output</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">awk</span> <span class="nt">-F</span><span class="s1">'|'</span> <span class="s1">'($3 ~ /up/) {net[substr($5,index($5,":")+2,length(substr($5,index($5,":")+2))-1) "|" substr($4,index($4,":")+2,length(substr($4,index($4,":")+2))-1)]++} END{for (n in net) {print n,net[n]}}'</span> <span class="nv">OFS</span><span class="o">=</span><span class="s1">'|'</span> /var/log/NetworkManager-dispatcher.d.log<span class="k">*</span>
</code></pre></div></div>

<p>In awk I can really play around with the key of an associative array.</p>

<h4 id="i-want-to-know-what-ip-addresses-ive-had">I want to know what IP addresses I’ve had:</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">awk</span> <span class="nt">-F</span><span class="s1">'|'</span> <span class="s1">'($3 ~ /up/) {net[$6]++} END{for (n in net) {print substr(n,2)}}'</span> /var/log/NetworkManager-dispatcher.d.log<span class="k">*</span>
</code></pre></div></div>

<p>Awk has associative arrays, so it’s easy to use some data as a key.</p>

<h4 id="i-want-to-create-a-file-named-after-an-id-of-a-connection-and-save-all-times-ive-connected-to-such-a-network-into-the-file">I want to create a file named after an ID of a connection and save all times I’ve connected to such a network into the file:</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">awk</span> <span class="nt">-F</span><span class="s1">'|'</span> <span class="s1">'($3 ~ /up/) {print $1 &gt; substr($5,index($5,":")+2,length(substr($5,index($5,":")+2))-1)}'</span> /var/log/NetworkManager-dispatcher.d.log<span class="k">*</span>
</code></pre></div></div>

<p>Awk can create files for me and I can use redirection in awk.</p>
:ET